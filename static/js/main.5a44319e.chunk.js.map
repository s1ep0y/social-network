{"version":3,"sources":["img/icons/delete.svg","img/icons/message.svg","img/icons/search.svg","logo.svg","redux/reducers/index.js","serviceWorker.js","components/Friends/SingleFriend.jsx","components/Friends/Friends.jsx","App.jsx","index.js"],"names":["module","exports","combineReducers","Boolean","window","location","hostname","match","SingleFriendWrapper","styled","div","FriendAvatar","img","FriendAvatarWrapper","BaseButtonStyle","DeleteButton","button","DeleteIcon","MessageButton","MessageIcon","FriendInfo","FriendFullName","span","FriendProfession","Placer","SingleFriend","props","firstname","lastname","profesion","avatarka","deleteButtonHandler","messegeButtonHandler","src","alt","onClick","defaultProps","FriendsWrapper","PageMarker","h2","SearchBlock","SearchIcon","SearchInpit","input","friendsArr","firstName","lastName","id","Friends","useState","filterString","setfilterString","console","log","defaultValue","placeholder","onChange","event","target","value","toLowerCase","nostyle","length","filter","includes","map","item","key","uniqueId","App","className","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5a44319e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.56397e00.svg\";","module.exports = __webpack_public_path__ + \"static/media/message.3c8e2cbb.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.19142cc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { combineReducers } from 'redux';\n\nexport default combineReducers({});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport DeleteIcon from '../../img/icons/delete.svg';\nimport MessageIcon from '../../img/icons/message.svg';\n\nconst SingleFriendWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  align-items: center;\n  padding: 51px 0px;\n  border-bottom: 1px solid #b2b2b2;\n`;\n\nconst FriendAvatar = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst FriendAvatarWrapper = styled.div`\n  width: 90px;\n  height: 90px;\n  border-radius: 50%;\n  overflow: hidden;\n  margin-right: 37px;\n`;\n\nconst BaseButtonStyle = `\n    transition: background-color 0.2s;\n    height: 28px;\n    width: 28px;\n    border: none;\n    background-color: #515151;\n    mask-size: cover;\n    justify-self: flex-end;\n    &:hover{\n        background-color: #111;\n    };\n`;\n\nconst DeleteButton = styled.button`\n    ${BaseButtonStyle}\n    mask-image: url(${DeleteIcon});\n    margin-left: 69px;\n`;\n\nconst MessageButton = styled.button`\n    ${BaseButtonStyle}\n    mask-image: url(${MessageIcon});\n`;\n\nconst FriendInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n`;\n\nconst FriendFullName = styled.span`\n  color: #000000;\n  margin-bottom: 8px;\n  font-weight: 500;\n  font-size: 18px;\n`;\n\nconst FriendProfession = styled.span`\n  color: #515151;\n  font-size: 16px;\n`;\n\nconst Placer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  align-items: center;\n`;\n\nconst SingleFriend = (props) => {\n  const {\n    firstname,\n    lastname,\n    profesion,\n    avatarka,\n    deleteButtonHandler,\n    messegeButtonHandler,\n  } = props;\n  return (\n    <SingleFriendWrapper>\n      <Placer>\n        <FriendAvatarWrapper>\n          <FriendAvatar src={avatarka} alt=\"there should be avatarka\" />\n        </FriendAvatarWrapper>\n        <FriendInfo>\n          <FriendFullName>\n            {firstname} {lastname}\n          </FriendFullName>\n          <FriendProfession>{profesion}</FriendProfession>\n        </FriendInfo>\n      </Placer>\n      <Placer>\n        <MessageButton onClick={messegeButtonHandler} />\n        <DeleteButton onClick={deleteButtonHandler} />\n      </Placer>\n    </SingleFriendWrapper>\n  );\n};\n\nSingleFriend.defaultProps = {\n  firstname: '',\n  lastname: '',\n  profesion: '',\n  avatarka: '',\n  deleteButtonHandler: () => {},\n  messegeButtonHandler: () => {},\n};\n\nSingleFriend.propTypes = {\n  firstname: PropTypes.string,\n  lastname: PropTypes.string,\n  profesion: PropTypes.string,\n  avatarka: PropTypes.string,\n  deleteButtonHandler: PropTypes.func,\n  messegeButtonHandler: PropTypes.func,\n};\n\nexport default SingleFriend;\n","import React, { useState } from 'react';\n// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { uniqueId } from 'lodash';\nimport SingleFriend from './SingleFriend';\nimport SearchIcon from '../../img/icons/search.svg';\n\nconst FriendsWrapper = styled.div`\n  @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600&display=swap');\n  background: #ffffff;\n  font-family: 'Montserrat', sans-serif;\n  border-radius: 15px 15px 0px 0px;\n  padding: 114px 114px 114px 91px;\n  margin-top: 275px;\n  position: relative;\n`;\n\nconst PageMarker = styled.h2`\n  margin: 0;\n  left: 90px;\n  top: -91px;\n  padding: 58px 77px;\n  position: absolute;\n  border-radius: 15px;\n  font-weight: 600;\n  font-size: 32px;\n  line-height: 39px;\n  background: #ffb11b;\n`;\n\nconst SearchBlock = styled.div`\n  display: flex;\n  font-size: 16px;\n  line-height: 20px;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n  min-width: 100%;\n  border-top: 1px solid #b3b3b3;\n  border-bottom: 1px solid #b3b3b3;\n  &::after {\n    top: 49px;\n    right: 0;\n    position: absolute;\n    height: 30px;\n    width: 30px;\n    background-color: #515151;\n    mask-image: url(${SearchIcon});\n    mask-size: cover;\n    content: '';\n  }\n`;\n\nconst SearchInpit = styled.input`\n  color: #515151;\n  min-width: 100%;\n  padding-right: 30px;\n  margin: 53px 0px 57px 0px;\n  border: none;\n  outline: none;\n  font-size: 16px;\n  line-height: 20px;\n  position: relative;\n`;\n\nconst friendsArr = [\n  {\n    firstName: 'Firstname1',\n    lastName: 'Lastname1',\n    profesion: 'profeson 1',\n    avatarka: 'https://dummyimage.com/600x400/000/fff',\n    id: 1,\n  },\n  {\n    firstName: 'Firstname2',\n    lastName: 'Lastname2',\n    profesion: 'profeson 2',\n    avatarka: 'https://dummyimage.com/600x400/000/fff',\n    id: 2,\n  },\n  {\n    firstName: 'Firstname3',\n    lastName: 'Lastname3',\n    profesion: 'profeson 3',\n    avatarka: 'https://dummyimage.com/600x400/000/fff',\n    id: 3,\n  },\n];\n\nconst Friends = () => {\n  const [filterString, setfilterString] = useState('');\n\n  const filterInputHandler = (event) => setfilterString(event.target.value.toLowerCase());\n\n  const userFiltered = () => {\n    if (filterString.length > 0) {\n      return friendsArr.filter(({ firstName, lastName }) => {\n        const fullName = `${firstName} ${lastName}`.toLowerCase();\n        return fullName.includes(filterString);\n      });\n    }\n    return friendsArr;\n  };\n\n  const deleteButtonHandler = (id) => () => {\n    console.log(`delete ${id}`);\n  };\n\n  const messegeButtonHandler = (id) => () => {\n    console.log(`message ${id}`);\n  };\n\n  return (\n    <FriendsWrapper>\n      <PageMarker>Друзья</PageMarker>\n      <SearchBlock>\n        <SearchInpit\n          defaultValue=\"\"\n          placeholder=\"Начните поиск друзей...\"\n          onChange={filterInputHandler}\n          nostyle=\"true\"\n        />\n      </SearchBlock>\n      <div>\n        {userFiltered().map((item) => (\n          <SingleFriend\n            key={uniqueId()}\n            deleteButtonHandler={deleteButtonHandler(item.id)}\n            messegeButtonHandler={messegeButtonHandler(item.id)}\n            firstname={item.firstName}\n            lastname={item.lastName}\n            profesion={item.profesion}\n            avatarka={item.avatarka}\n          />\n        ))}\n      </div>\n    </FriendsWrapper>\n  );\n};\n\nexport default Friends;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Friends from './components/Friends/Friends';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Friends />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducers from './redux/reducers';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}